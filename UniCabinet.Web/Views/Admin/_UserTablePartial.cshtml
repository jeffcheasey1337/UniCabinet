@model UniCabinet.Core.Models.ViewModel.StudentGroupVM

<div class="container mt-4">
    <h2 class="mb-4">Список пользователей</h2>

    <div class="table-responsive">
        <table class="table table-striped table-hover table-bordered align-middle" id="userTable">
            <thead class="table-primary">
                <tr>
                    <th scope="col">ФИО</th>
                    <th scope="col">Email</th>
                    <th scope="col">Роли</th>
                    <th scope="col">Группа</th>
                    <th scope="col">Действия</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.Users)
                {
                    <tr>
                        <td>
                            <div class="d-flex align-items-center">
                                @if (user.Roles.Contains("Администратор"))
                                {
                                    <span class="badge bg-danger me-2">A</span>
                                }
                                else if (user.Roles.Contains("Преподаватель"))
                                {
                                    <span class="badge bg-success me-2">T</span>
                                }
                                else if (user.Roles.Contains("Студент"))
                                {
                                    <span class="badge bg-info me-2">S</span>
                                }
                                @user.LastName @user.FirstName @user.Patronymic
                            </div>
                        </td>
                        <td>@user.Email</td>
                        <td>@string.Join(", ", user.Roles)</td>
                        <td>@(string.IsNullOrEmpty(user.GroupName) ? "Не назначена" : user.GroupName)</td>
                        <td>
                            <div class="btn-group" role="group">
                                @if (user.Roles.Contains("Верефицирован"))
                                {
                                    @if (user.Roles.Contains("Студент"))
                                    {
                                        <button type="button" class="btn btn-success btn-sm me-1"
                                                onclick="openModal('@Url.Action("GroupEditModal", "Admin", new { userId = user.Id })', 'groupModal')">
                                            <i class="bi bi-pencil-square"></i> Группа
                                        </button>
                                    }
                                    else if (user.Roles.Contains("Преподаватель") || (user.Roles.Contains("Зав. Кафедры")))
                                    {
                                        <button type="button" class="btn btn-success btn-sm me-1"
                                                onclick="openModal('@Url.Action("SpecAndDepEditModal", "Admin", new { userId = user.Id })', 'groupModal')">
                                            <i class="bi bi-pencil-square"></i> Кафедра и спец.
                                        </button>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Изменение недоступно</span>
                                    }
                                }
                                else
                                {
                                    <span class="text-muted">Не верифицирован</span>
                                }

                                <button type="button" class="btn btn-secondary btn-sm me-1"
                                        onclick="openModal('@Url.Action("RoleEditModal", "Admin", new { userId = user.Id })', 'roleModal')">
                                    <i class="bi bi-shield-lock"></i> Роль
                                </button>

                                <button type="button" class="btn btn-info btn-sm"
                                        onclick="openModal('@Url.Action("UserDetailModal", "Admin", new { userId = user.Id })', 'userDetailModal')">
                                    <i class="bi bi-info-circle"></i> Инфо
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@await Html.PartialAsync("_Pagination", Model.Pagination)